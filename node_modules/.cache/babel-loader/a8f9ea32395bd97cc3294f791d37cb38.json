{"ast":null,"code":"var _jsxFileName = \"/Users/Mihail/Desktop/dev/todoReactTS/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport TodoPanel from './components/TodoPanel';\nimport { TodoProvider } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_TODO_LIST = [{\n  id: 1,\n  name: 'task 1',\n  description: 'description 1',\n  checked: false\n}, {\n  id: 2,\n  name: 'task 2',\n  description: 'description 2',\n  checked: false\n}, {\n  id: 3,\n  name: 'task 3',\n  description: 'description descriptiondescriptiondescriptiondescription 3',\n  checked: true\n}];\nfunction App() {\n  _s();\n  const [todos, setTodos] = React.useState(DEFAULT_TODO_LIST);\n  const [todoIdEdit, setTodoIdEdit] = React.useState(null);\n  const selectTodoForEdit = id => {\n    setTodoIdEdit(id);\n  };\n  const addTodo = _ref => {\n    let {\n      name,\n      description\n    } = _ref;\n    setTodos([...todos, {\n      id: todos[todos.length - 1].id + 1,\n      description,\n      name,\n      checked: false\n    }]);\n  };\n  const checkTodo = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          checked: !todo.checked\n        };\n      }\n      return todo;\n    }));\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const changeTodo = _ref2 => {\n    let {\n      name,\n      description\n    } = _ref2;\n    setTodos(todos.map(todo => {\n      if (todo.id === todoIdEdit) {\n        return {\n          ...todo,\n          name,\n          description\n        };\n      }\n      return todo;\n    }));\n    setTodoIdEdit(null);\n  };\n  return /*#__PURE__*/_jsxDEV(TodoProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TodoPanel, {\n          mode: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n          todoIdEdit: todoIdEdit,\n          todos: todos,\n          changeTodo: changeTodo,\n          checkTodo: checkTodo,\n          deleteTodo: deleteTodo,\n          selectTodoForEdit: selectTodoForEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fpTKagiHxAEB+++wD+lKfUYaEEo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","TodoList","TodoPanel","TodoProvider","DEFAULT_TODO_LIST","id","name","description","checked","App","todos","setTodos","useState","todoIdEdit","setTodoIdEdit","selectTodoForEdit","addTodo","length","checkTodo","map","todo","deleteTodo","filter","changeTodo"],"sources":["/Users/Mihail/Desktop/dev/todoReactTS/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { TodoComment } from 'typescript';\nimport './App.css';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport TodoPanel from './components/TodoPanel';\nimport { TodoProvider } from './utils';\n\nexport type Todo = {\n  id: number;\n  name: string;\n  description: string;\n  checked: boolean;\n};\n\nconst DEFAULT_TODO_LIST = [\n  { id: 1, name: 'task 1', description: 'description 1', checked: false },\n  { id: 2, name: 'task 2', description: 'description 2', checked: false },\n  {\n    id: 3,\n    name: 'task 3',\n    description: 'description descriptiondescriptiondescriptiondescription 3',\n    checked: true,\n  },\n];\n\nfunction App() {\n  const [todos, setTodos] = React.useState(DEFAULT_TODO_LIST);\n  const [todoIdEdit, setTodoIdEdit] = React.useState<Todo['id'] | null>(null);\n\n  const selectTodoForEdit = (id: Todo['id']) => {\n    setTodoIdEdit(id);\n  };\n  const addTodo = ({ name, description }: Omit<Todo, 'checked' | 'id'>) => {\n    setTodos([\n      ...todos,\n      { id: todos[todos.length - 1].id + 1, description, name, checked: false },\n    ]);\n  };\n  const checkTodo = (id: Todo['id']) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          return { ...todo, checked: !todo.checked };\n        }\n        return todo;\n      })\n    );\n  };\n  const deleteTodo = (id: Todo['id']) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n  const changeTodo = ({ name, description }: Omit<Todo, 'checked' | 'id'>) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === todoIdEdit) {\n          return { ...todo, name, description };\n        }\n        return todo;\n      })\n    );\n    setTodoIdEdit(null);\n  };\n  return (\n    <TodoProvider>\n      <div className='main'>\n        <div className='todo'>\n          <Header />\n          <TodoPanel mode='add' />\n          <TodoList\n            todoIdEdit={todoIdEdit}\n            todos={todos}\n            changeTodo={changeTodo}\n            checkTodo={checkTodo}\n            deleteTodo={deleteTodo}\n            selectTodoForEdit={selectTodoForEdit}\n          />\n        </div>\n      </div>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}