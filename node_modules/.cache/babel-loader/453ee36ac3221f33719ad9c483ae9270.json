{"ast":null,"code":"var _jsxFileName = \"/Users/Mihail/Desktop/dev/todoReactTS/src/components/TodoPanel.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Button from './Button';\nimport './TodoPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// type TodoPanelProps = AddTodoPanelProps | EditTodoPanelProps;\n\nconst DEFAULT_TODO = {\n  name: '',\n  description: ''\n};\nconst TodoPanel = _ref => {\n  _s();\n  let {\n    addTodo,\n    changeTodo,\n    mode\n  } = _ref;\n  const isEdit = mode === 'edit';\n  const [todo, setTodo] = React.useState(DEFAULT_TODO);\n  const onChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setTodo({\n      ...todo,\n      [name]: value\n    });\n  };\n  const onClick = () => {\n    const todoItem = {\n      name: todo.name,\n      description: todo.description\n    };\n    if (isEdit === 'edit') {\n      return changeTodo(todoItem);\n    }\n    addTodo(todoItem);\n    setTodo(DEFAULT_TODO);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: todo.name,\n            name: \"name\",\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: todo.description,\n            id: \"description\",\n            name: \"description\",\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), !isEdit( /*#__PURE__*/_jsxDEV(Button, {\n      color: \"blue\",\n      onClick: onClick,\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this)), isEdit && /*#__PURE__*/_jsxDEV(Button, {\n      color: \"orange\",\n      onClick: onClick,\n      children: \"EDIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoPanel, \"0/IxKv8+Mso5W3VIfxTC8N0kOEo=\");\n_c = TodoPanel;\nexport default TodoPanel;\nvar _c;\n$RefreshReg$(_c, \"TodoPanel\");","map":{"version":3,"names":["React","Button","DEFAULT_TODO","name","description","TodoPanel","addTodo","changeTodo","mode","isEdit","todo","setTodo","useState","onChange","event","value","target","onClick","todoItem"],"sources":["/Users/Mihail/Desktop/dev/todoReactTS/src/components/TodoPanel.tsx"],"sourcesContent":["import React from 'react';\nimport Button from './Button';\nimport './TodoPanel.css';\nexport type Todo = {\n  id: number;\n  name: string;\n  description: string;\n  checked: boolean;\n};\n\ninterface AddTodoPanelProps {\n  mode: 'add';\n  addTodo: ({ name, description }: Omit<Todo, 'checked' | 'id'>) => void;\n}\ninterface EditTodoPanelProps {\n  mode: 'edit';\n  editTodo: Omit<Todo, 'id' | 'checked'>;\n  changeTodo: ({ name, description }: Omit<Todo, 'checked' | 'id'>) => void;\n}\n\n// type TodoPanelProps = AddTodoPanelProps | EditTodoPanelProps;\n\nconst DEFAULT_TODO = {\n  name: '',\n  description: '',\n};\n\nconst TodoPanel: React.FC<TodoPanelProps> = ({ addTodo, changeTodo, mode }) => {\n  const isEdit = mode === 'edit';\n\n  const [todo, setTodo] = React.useState(DEFAULT_TODO);\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setTodo({ ...todo, [name]: value });\n  };\n  const onClick = () => {\n    const todoItem = { name: todo.name, description: todo.description };\n    if (isEdit === 'edit') {\n      return changeTodo(todoItem);\n    }\n    addTodo(todoItem);\n    setTodo(DEFAULT_TODO);\n  };\n  return (\n    <div className='todo-panel'>\n      <div className='fields'>\n        <div className='field'>\n          <label htmlFor='name'>\n            <div>name</div>\n            <input\n              type='text'\n              id='name'\n              value={todo.name}\n              name='name'\n              onChange={onChange}\n            />\n          </label>\n        </div>\n        <div className='field'>\n          <label htmlFor='description'>\n            <div>description</div>\n            <input\n              type='text'\n              value={todo.description}\n              id='description'\n              name='description'\n              onChange={onChange}\n            />\n          </label>\n        </div>\n      </div>\n      {\n        !isEdit(\n          <Button color='blue' onClick={onClick}>\n            ADD\n          </Button>\n        )\n      }\n      {isEdit && (\n        <Button color='orange' onClick={onClick}>\n          EDIT\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default TodoPanel;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,iBAAiB;AAAC;AAkBzB;;AAEA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,SAAmC,GAAG,QAAmC;EAAA;EAAA,IAAlC;IAAEC,OAAO;IAAEC,UAAU;IAAEC;EAAK,CAAC;EACxE,MAAMC,MAAM,GAAGD,IAAI,KAAK,MAAM;EAE9B,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAACV,YAAY,CAAC;EACpD,MAAMW,QAAQ,GAAIC,KAA0C,IAAK;IAC/D,MAAM;MAAEX,IAAI;MAAEY;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IACpCL,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACP,IAAI,GAAGY;IAAM,CAAC,CAAC;EACrC,CAAC;EACD,MAAME,OAAO,GAAG,MAAM;IACpB,MAAMC,QAAQ,GAAG;MAAEf,IAAI,EAAEO,IAAI,CAACP,IAAI;MAAEC,WAAW,EAAEM,IAAI,CAACN;IAAY,CAAC;IACnE,IAAIK,MAAM,KAAK,MAAM,EAAE;MACrB,OAAOF,UAAU,CAACW,QAAQ,CAAC;IAC7B;IACAZ,OAAO,CAACY,QAAQ,CAAC;IACjBP,OAAO,CAACT,YAAY,CAAC;EACvB,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,wBACzB;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACrB;QAAK,SAAS,EAAC,OAAO;QAAA,uBACpB;UAAO,OAAO,EAAC,MAAM;UAAA,wBACnB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAe,eACf;YACE,IAAI,EAAC,MAAM;YACX,EAAE,EAAC,MAAM;YACT,KAAK,EAAEQ,IAAI,CAACP,IAAK;YACjB,IAAI,EAAC,MAAM;YACX,QAAQ,EAAEU;UAAS;YAAA;YAAA;YAAA;UAAA,QACnB;QAAA;UAAA;UAAA;UAAA;QAAA;MACI;QAAA;QAAA;QAAA;MAAA,QACJ,eACN;QAAK,SAAS,EAAC,OAAO;QAAA,uBACpB;UAAO,OAAO,EAAC,aAAa;UAAA,wBAC1B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAsB,eACtB;YACE,IAAI,EAAC,MAAM;YACX,KAAK,EAAEH,IAAI,CAACN,WAAY;YACxB,EAAE,EAAC,aAAa;YAChB,IAAI,EAAC,aAAa;YAClB,QAAQ,EAAES;UAAS;YAAA;YAAA;YAAA;UAAA,QACnB;QAAA;UAAA;UAAA;UAAA;QAAA;MACI;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,EAEJ,CAACJ,MAAM,eACL,QAAC,MAAM;MAAC,KAAK,EAAC,MAAM;MAAC,OAAO,EAAEQ,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAE7B,CACV,EAEFR,MAAM,iBACL,QAAC,MAAM;MAAC,KAAK,EAAC,QAAQ;MAAC,OAAO,EAAEQ,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGzC;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GA1DIZ,SAAmC;AAAA,KAAnCA,SAAmC;AA4DzC,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}