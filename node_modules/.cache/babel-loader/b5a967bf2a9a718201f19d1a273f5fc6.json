{"ast":null,"code":"var _jsxFileName = \"/Users/Mihail/Desktop/dev/todoReactTS/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport TodoPanel from './components/TodoPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_TODO_LIST = [{\n  id: 1,\n  name: 'task 1',\n  description: 'description 1',\n  checked: false\n}, {\n  id: 2,\n  name: 'task 2',\n  description: 'description 2',\n  checked: false\n}, {\n  id: 3,\n  name: 'task 3',\n  description: 'description descriptiondescriptiondescriptiondescription 3',\n  checked: true\n}];\nfunction App() {\n  _s();\n  const [todos, setTodos] = React.useState(DEFAULT_TODO_LIST);\n  const [todoIdEdi, setTodoId] = React.useState(null);\n  const addTodo = _ref => {\n    let {\n      name,\n      description\n    } = _ref;\n    setTodos([...todos, {\n      id: todos[todos.length - 1].id + 1,\n      description,\n      name,\n      checked: false\n    }]);\n  };\n  const checkTodo = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          checked: !todo.checked\n        };\n      }\n      return todo;\n    }));\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        todoCount: todos.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoPanel, {\n        addTodo: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        checkTodo: checkTodo,\n        deleteTodo: deleteTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"asOmS/3eM353qWU4cdJPiOHCgzs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","TodoList","TodoPanel","DEFAULT_TODO_LIST","id","name","description","checked","App","todos","setTodos","useState","todoIdEdi","setTodoId","addTodo","length","checkTodo","map","todo","deleteTodo","filter"],"sources":["/Users/Mihail/Desktop/dev/todoReactTS/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { TodoComment } from 'typescript';\nimport './App.css';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport TodoPanel from './components/TodoPanel';\n\nexport type Todo = {\n  id: number;\n  name: string;\n  description: string;\n  checked: boolean;\n};\n\nconst DEFAULT_TODO_LIST = [\n  { id: 1, name: 'task 1', description: 'description 1', checked: false },\n  { id: 2, name: 'task 2', description: 'description 2', checked: false },\n  {\n    id: 3,\n    name: 'task 3',\n    description: 'description descriptiondescriptiondescriptiondescription 3',\n    checked: true,\n  },\n];\n\nfunction App() {\n  const [todos, setTodos] = React.useState(DEFAULT_TODO_LIST);\n  const [todoIdEdi, setTodoId] = React.useState<Todo['id'] | null>(null)\n  const addTodo = ({ name, description }: Omit<Todo, 'checked' | 'id'>) => {\n    setTodos([\n      ...todos,\n      { id: todos[todos.length - 1].id + 1, description, name, checked: false },\n    ]);\n  };\n  const checkTodo = (id: Todo['id']) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          return { ...todo, checked: !todo.checked };\n        }\n        return todo;\n      })\n    );\n  };\n  const deleteTodo = (id: Todo['id']) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n  return (\n    <div className='main'>\n      <div className='todo'>\n        <Header todoCount={todos.length} />\n        <TodoPanel addTodo={addTodo} />\n        <TodoList todos={todos} checkTodo={checkTodo} deleteTodo={deleteTodo} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAAC;AAS/C,MAAMC,iBAAiB,GAAG,CACxB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,WAAW,EAAE,eAAe;EAAEC,OAAO,EAAE;AAAM,CAAC,EACvE;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,WAAW,EAAE,eAAe;EAAEC,OAAO,EAAE;AAAM,CAAC,EACvE;EACEH,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,QAAQ;EACdC,WAAW,EAAE,4DAA4D;EACzEC,OAAO,EAAE;AACX,CAAC,CACF;AAED,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAACR,iBAAiB,CAAC;EAC3D,MAAM,CAACS,SAAS,EAAEC,SAAS,CAAC,GAAGd,KAAK,CAACY,QAAQ,CAAoB,IAAI,CAAC;EACtE,MAAMG,OAAO,GAAG,QAAyD;IAAA,IAAxD;MAAET,IAAI;MAAEC;IAA0C,CAAC;IAClEI,QAAQ,CAAC,CACP,GAAGD,KAAK,EACR;MAAEL,EAAE,EAAEK,KAAK,CAACA,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC,CAACX,EAAE,GAAG,CAAC;MAAEE,WAAW;MAAED,IAAI;MAAEE,OAAO,EAAE;IAAM,CAAC,CAC1E,CAAC;EACJ,CAAC;EACD,MAAMS,SAAS,GAAIZ,EAAc,IAAK;IACpCM,QAAQ,CACND,KAAK,CAACQ,GAAG,CAAEC,IAAI,IAAK;MAClB,IAAIA,IAAI,CAACd,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGc,IAAI;UAAEX,OAAO,EAAE,CAACW,IAAI,CAACX;QAAQ,CAAC;MAC5C;MACA,OAAOW,IAAI;IACb,CAAC,CAAC,CACH;EACH,CAAC;EACD,MAAMC,UAAU,GAAIf,EAAc,IAAK;IACrCM,QAAQ,CAACD,KAAK,CAACW,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACd,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,uBACnB;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB,QAAC,MAAM;QAAC,SAAS,EAAEK,KAAK,CAACM;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eACnC,QAAC,SAAS;QAAC,OAAO,EAAED;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/B,QAAC,QAAQ;QAAC,KAAK,EAAEL,KAAM;QAAC,SAAS,EAAEO,SAAU;QAAC,UAAU,EAAEG;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACpE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA/BQX,GAAG;AAAA,KAAHA,GAAG;AAiCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}