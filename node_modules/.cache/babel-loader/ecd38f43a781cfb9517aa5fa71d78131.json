{"ast":null,"code":"var _jsxFileName = \"/Users/Mihail/Desktop/dev/todoReactTS/src/components/TodoList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTodo } from '../utils';\nimport TodoItem from './TodoItem';\nimport TodoPanel from './TodoPanel';\n// import Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const {\n    todos,\n    todoIdEdit,\n    checkTodo,\n    deleteTodo,\n    selectTodoForEdit\n  } = useTodo();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todos.map(todo => {\n      if (todo.id === todoIdEdit) return /*#__PURE__*/_jsxDEV(TodoPanel, {\n        mode: \"edit\",\n        editTodo: {\n          name: todo.name,\n          description: todo.description\n        }\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this);\n      return /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo,\n        checkTodo: checkTodo,\n        deleteTodo: deleteTodo,\n        selectTodoForEdit: selectTodoForEdit\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"YjHcC5PmjG5RRrlV+namUiGoH4U=\", false, function () {\n  return [useTodo];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useTodo","TodoItem","TodoPanel","TodoList","todos","todoIdEdit","checkTodo","deleteTodo","selectTodoForEdit","map","todo","id","name","description"],"sources":["/Users/Mihail/Desktop/dev/todoReactTS/src/components/TodoList.tsx"],"sourcesContent":["import React from 'react';\nimport { useTodo } from '../utils';\nimport TodoItem from './TodoItem';\nimport TodoPanel from './TodoPanel';\n// import Button from './Button';\nexport type Todo = {\n  id: number;\n  name: string;\n  description: string;\n  checked: boolean;\n};\n\nconst TodoList: React.FC = () => {\n  const { todos, todoIdEdit, checkTodo, deleteTodo, selectTodoForEdit } = useTodo();\n  return (\n    <div>\n      {todos.map((todo) => {\n        if (todo.id === todoIdEdit)\n          return (\n            <TodoPanel\n              key={todo.id}\n              mode='edit'\n              editTodo={{ name: todo.name, description: todo.description }}\n            />\n          );\n        return (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            checkTodo={checkTodo}\n            deleteTodo={deleteTodo}\n            selectTodoForEdit={selectTodoForEdit}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,UAAU;AAClC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC;AAAA;AAQA,MAAMC,QAAkB,GAAG,MAAM;EAAA;EAC/B,MAAM;IAAEC,KAAK;IAAEC,UAAU;IAAEC,SAAS;IAAEC,UAAU;IAAEC;EAAkB,CAAC,GAAGR,OAAO,EAAE;EACjF,oBACE;IAAA,UACGI,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAK;MACnB,IAAIA,IAAI,CAACC,EAAE,KAAKN,UAAU,EACxB,oBACE,QAAC,SAAS;QAER,IAAI,EAAC,MAAM;QACX,QAAQ,EAAE;UAAEO,IAAI,EAAEF,IAAI,CAACE,IAAI;UAAEC,WAAW,EAAEH,IAAI,CAACG;QAAY;MAAE,GAFxDH,IAAI,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAGZ;MAEN,oBACE,QAAC,QAAQ;QAEP,IAAI,EAAED,IAAK;QACX,SAAS,EAAEJ,SAAU;QACrB,UAAU,EAAEC,UAAW;QACvB,iBAAiB,EAAEC;MAAkB,GAJhCE,IAAI,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAKZ;IAEN,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GAzBIR,QAAkB;EAAA,QACkDH,OAAO;AAAA;AAAA,KAD3EG,QAAkB;AA2BxB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}