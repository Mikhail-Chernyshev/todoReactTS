{"ast":null,"code":"import React from'react';export var todoContext=/*#__PURE__*/React.createContext({todos:[],todoIdEdit:null,addTodo:function addTodo(){},deleteTodo:function deleteTodo(){},changeTodo:function changeTodo(){},checkTodo:function checkTodo(){},selectTodoForEdit:function selectTodoForEdit(){}});","map":{"version":3,"names":["React","todoContext","createContext","todos","todoIdEdit","addTodo","deleteTodo","changeTodo","checkTodo","selectTodoForEdit"],"sources":["/Users/Mihail/Desktop/dev/todoReactTS/src/utils/contexts/todoContext.ts"],"sourcesContent":["import React from 'react';\ntype Todo = {\n  id: number;\n  name: string;\n  description: string;\n  checked: boolean;\n};\nexport interface todoContextProps {\n  todos: Todo[];\n  checkTodo: (id: Todo['id']) => void;\n  deleteTodo: (id: Todo['id']) => void;\n  selectTodoForEdit: (id: Todo['id']) => void;\n  todoIdEdit: Todo['id'] | null;\n  changeTodo: ({ name, description }: Omit<Todo, 'checked' | 'id'>) => void;\n  addTodo: ({ name, description }: Omit<Todo, 'checked' | 'id'>) => void;\n}\nexport const todoContext = React.createContext<todoContextProps>({\n  todos: [],\n  todoIdEdit: null,\n  addTodo: () => {},\n  deleteTodo: () => {},\n  changeTodo: () => {},\n  checkTodo: () => {},\n  selectTodoForEdit: () => {},\n});\n\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CAgBzB,MAAO,IAAMC,YAAW,cAAGD,KAAK,CAACE,aAAa,CAAmB,CAC/DC,KAAK,CAAE,EAAE,CACTC,UAAU,CAAE,IAAI,CAChBC,OAAO,CAAE,kBAAM,CAAC,CAAC,CACjBC,UAAU,CAAE,qBAAM,CAAC,CAAC,CACpBC,UAAU,CAAE,qBAAM,CAAC,CAAC,CACpBC,SAAS,CAAE,oBAAM,CAAC,CAAC,CACnBC,iBAAiB,CAAE,4BAAM,CAAC,CAC5B,CAAC,CAAC"},"metadata":{},"sourceType":"module"}