{"ast":null,"code":"var _jsxFileName = \"/Users/Mihail/Desktop/dev/todoReactTS/src/utils/contexts/todoProvider.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { todoContext } from './todoContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_TODO_LIST = [{\n  id: 1,\n  name: 'task 1',\n  description: 'description 1',\n  checked: false\n}, {\n  id: 2,\n  name: 'task 2',\n  description: 'description 2',\n  checked: false\n}, {\n  id: 3,\n  name: 'task 3',\n  description: 'description descriptiondescriptiondescriptiondescription 3',\n  checked: true\n}];\nexport const TodoProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [todos, setTodos] = React.useState(DEFAULT_TODO_LIST);\n  const [todoIdEdit, setTodoIdEdit] = React.useState(null);\n  React.useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('items'));\n    if (items) {\n      setItems(items);\n    }\n  }, []);\n  React.useEffect(() => {\n    localStorage.setItem('items', JSON.stringify(items));\n  }, [items]);\n  const selectTodoForEdit = id => {\n    setTodoIdEdit(id);\n  };\n  const addTodo = _ref2 => {\n    let {\n      name,\n      description\n    } = _ref2;\n    setTodos([...todos, {\n      id: todos[todos.length - 1].id + 1,\n      description,\n      name,\n      checked: false\n    }]);\n  };\n  const checkTodo = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          checked: !todo.checked\n        };\n      }\n      return todo;\n    }));\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const changeTodo = _ref3 => {\n    let {\n      name,\n      description\n    } = _ref3;\n    setTodos(todos.map(todo => {\n      if (todo.id === todoIdEdit) {\n        return {\n          ...todo,\n          name,\n          description\n        };\n      }\n      return todo;\n    }));\n    setTodoIdEdit(null);\n  };\n  const value = React.useMemo(() => ({\n    todoIdEdit,\n    todos,\n    deleteTodo,\n    changeTodo,\n    addTodo,\n    selectTodoForEdit,\n    checkTodo\n  }), [todoIdEdit, todos, deleteTodo, changeTodo, addTodo, selectTodoForEdit, checkTodo]);\n  return /*#__PURE__*/_jsxDEV(todoContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 10\n  }, this);\n};\n_s(TodoProvider, \"HJB6Vyxp/s/dFzhV+J4k9lNWu6Y=\");\n_c = TodoProvider;\nvar _c;\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"names":["React","todoContext","DEFAULT_TODO_LIST","id","name","description","checked","TodoProvider","children","todos","setTodos","useState","todoIdEdit","setTodoIdEdit","useEffect","items","JSON","parse","localStorage","getItem","setItems","setItem","stringify","selectTodoForEdit","addTodo","length","checkTodo","map","todo","deleteTodo","filter","changeTodo","value","useMemo"],"sources":["/Users/Mihail/Desktop/dev/todoReactTS/src/utils/contexts/todoProvider.tsx"],"sourcesContent":["import React from 'react';\nimport { todoContext } from './todoContext';\ntype Todo = {\n  id: number;\n  name: string;\n  description: string;\n  checked: boolean;\n};\ninterface TodoProviderProps {\n  children: React.ReactNode;\n}\nconst DEFAULT_TODO_LIST = [\n  { id: 1, name: 'task 1', description: 'description 1', checked: false },\n  { id: 2, name: 'task 2', description: 'description 2', checked: false },\n  {\n    id: 3,\n    name: 'task 3',\n    description: 'description descriptiondescriptiondescriptiondescription 3',\n    checked: true,\n  },\n];\nexport const TodoProvider: React.FC<TodoProviderProps> = ({ children }) => {\n  const [todos, setTodos] = React.useState(DEFAULT_TODO_LIST);\n  const [todoIdEdit, setTodoIdEdit] = React.useState<Todo['id'] | null>(null);\n  React.useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('items'));\n    if (items) {\n      setItems(items);\n    }\n  }, []);\n\nReact.useEffect(() => {\n    localStorage.setItem('items', JSON.stringify(items));\n  }, [items]);\n\n  const selectTodoForEdit = (id: Todo['id']) => {\n    setTodoIdEdit(id);\n  };\n  const addTodo = ({ name, description }: Omit<Todo, 'checked' | 'id'>) => {\n    setTodos([\n      ...todos,\n      { id: todos[todos.length - 1].id + 1, description, name, checked: false },\n    ]);\n  };\n  const checkTodo = (id: Todo['id']) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          return { ...todo, checked: !todo.checked };\n        }\n        return todo;\n      })\n    );\n  };\n  const deleteTodo = (id: Todo['id']) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n  const changeTodo = ({ name, description }: Omit<Todo, 'checked' | 'id'>) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === todoIdEdit) {\n          return { ...todo, name, description };\n        }\n        return todo;\n      })\n    );\n    setTodoIdEdit(null);\n  };\n  const value = React.useMemo(\n    () => ({\n      todoIdEdit,\n      todos,\n      deleteTodo,\n      changeTodo,\n      addTodo,\n      selectTodoForEdit,\n      checkTodo,\n    }),\n    [\n      todoIdEdit,\n      todos,\n      deleteTodo,\n      changeTodo,\n      addTodo,\n      selectTodoForEdit,\n      checkTodo,\n    ]\n  );\n  return <todoContext.Provider value={value}>{children}</todoContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}