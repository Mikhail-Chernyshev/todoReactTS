{"ast":null,"code":"var _jsxFileName = \"/Users/Mihail/Desktop/dev/todoReactTS/src/utils/contexts/todoProvider.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { todoContext } from './todoContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const DEFAULT_TODO_LIST = [\n//   { id: 1, name: 'task 1', description: 'description 1', checked: false },\n//   { id: 2, name: 'task 2', description: 'description 2', checked: false },\n//   {\n//     id: 3,\n//     name: 'task 3',\n//     description: 'description descriptiondescriptiondescriptiondescription 3',\n//     checked: true,\n//   },\n// ];\nexport const TodoProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // const [todos, setTodos] = React.useState(DEFAULT_TODO_LIST);\n  const [todos, setTodos] = React.useState(() => {\n    // get the todos from localstorage\n    const savedTodos = localStorage.getItem(\"todos\");\n    // if there are todos stored\n    if (savedTodos) {\n      // return the parsed JSON object back to a javascript object\n      return JSON.parse(savedTodos);\n      // otherwise\n    } else {\n      // return an empty array\n      return [];\n    }\n  });\n  const [todoIdEdit, setTodoIdEdit] = React.useState(null);\n  // React.useEffect(() => {\n  //   const todos = JSON.parse(localStorage.getItem('todos') || '{}');\n  //   if (todos) {\n  //     setTodos(todos);\n  //   }\n  // }, []);\n\n  React.useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n  const selectTodoForEdit = id => {\n    setTodoIdEdit(id);\n  };\n  const addTodo = _ref2 => {\n    let {\n      name,\n      description\n    } = _ref2;\n    setTodos([...todos, {\n      id: todos[todos.length - 1].id + 1,\n      description,\n      name,\n      checked: false\n    }]);\n  };\n  const checkTodo = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          checked: !todo.checked\n        };\n      }\n      return todo;\n    }));\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const changeTodo = _ref3 => {\n    let {\n      name,\n      description\n    } = _ref3;\n    setTodos(todos.map(todo => {\n      if (todo.id === todoIdEdit) {\n        return {\n          ...todo,\n          name,\n          description\n        };\n      }\n      return todo;\n    }));\n    setTodoIdEdit(null);\n  };\n  const value = React.useMemo(() => ({\n    todoIdEdit,\n    todos,\n    deleteTodo,\n    changeTodo,\n    addTodo,\n    selectTodoForEdit,\n    checkTodo\n  }), [todoIdEdit, todos, deleteTodo, changeTodo, addTodo, selectTodoForEdit, checkTodo]);\n  return /*#__PURE__*/_jsxDEV(todoContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 10\n  }, this);\n};\n_s(TodoProvider, \"1hA7WEdLq0P3IaYtLu1e429H0Zo=\");\n_c = TodoProvider;\nvar _c;\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"names":["React","todoContext","TodoProvider","children","todos","setTodos","useState","savedTodos","localStorage","getItem","JSON","parse","todoIdEdit","setTodoIdEdit","useEffect","setItem","stringify","selectTodoForEdit","id","addTodo","name","description","length","checked","checkTodo","map","todo","deleteTodo","filter","changeTodo","value","useMemo"],"sources":["/Users/Mihail/Desktop/dev/todoReactTS/src/utils/contexts/todoProvider.tsx"],"sourcesContent":["import React from 'react';\nimport ts from 'typescript';\nimport { todoContext } from './todoContext';\ntype Todo = {\n  id: number;\n  name: string;\n  description: string;\n  checked: boolean;\n};\ninterface TodoProviderProps {\n  children: React.ReactNode;\n}\n// const DEFAULT_TODO_LIST = [\n//   { id: 1, name: 'task 1', description: 'description 1', checked: false },\n//   { id: 2, name: 'task 2', description: 'description 2', checked: false },\n//   {\n//     id: 3,\n//     name: 'task 3',\n//     description: 'description descriptiondescriptiondescriptiondescription 3',\n//     checked: true,\n//   },\n// ];\nexport const TodoProvider: React.FC<TodoProviderProps> = ({ children }) => {\n  // const [todos, setTodos] = React.useState(DEFAULT_TODO_LIST);\n  const [todos, setTodos] = React.useState(() => {\n    // get the todos from localstorage\n    const savedTodos = localStorage.getItem(\"todos\");\n    // if there are todos stored\n    if (savedTodos) {\n      // return the parsed JSON object back to a javascript object\n      return JSON.parse(savedTodos);\n      // otherwise\n    } else {\n      // return an empty array\n      return [];\n    }\n  });\n  const [todoIdEdit, setTodoIdEdit] = React.useState<Todo['id'] | null>(null);\n  // React.useEffect(() => {\n  //   const todos = JSON.parse(localStorage.getItem('todos') || '{}');\n  //   if (todos) {\n  //     setTodos(todos);\n  //   }\n  // }, []);\n\n  React.useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const selectTodoForEdit = (id: Todo['id']) => {\n    setTodoIdEdit(id);\n  };\n  const addTodo = ({ name, description }: Omit<Todo, 'checked' | 'id'>) => {\n    setTodos([\n      ...todos,\n      { id: todos[todos.length - 1].id + 1, description, name, checked: false },\n    ]);\n  };\n  const checkTodo = (id: Todo['id']) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          return { ...todo, checked: !todo.checked };\n        }\n        return todo;\n      })\n    );\n  };\n  const deleteTodo = (id: Todo['id']) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n  const changeTodo = ({ name, description }: Omit<Todo, 'checked' | 'id'>) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === todoIdEdit) {\n          return { ...todo, name, description };\n        }\n        return todo;\n      })\n    );\n    setTodoIdEdit(null);\n  };\n  const value = React.useMemo(\n    () => ({\n      todoIdEdit,\n      todos,\n      deleteTodo,\n      changeTodo,\n      addTodo,\n      selectTodoForEdit,\n      checkTodo,\n    }),\n    [\n      todoIdEdit,\n      todos,\n      deleteTodo,\n      changeTodo,\n      addTodo,\n      selectTodoForEdit,\n      checkTodo,\n    ]\n  );\n  return <todoContext.Provider value={value}>{children}</todoContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}